{
  "name": "aws-serverless-express-example",
  "version": "2.1.1",
  "description": "Example application for running a Node Express app on AWS Lambda using Amazon API Gateway.",
  "main": "lambda.js",
  "config": {
    "s3BucketName": "firstnet-hackathon",
    "region": "us-east-1",
    "cloudFormationStackName": "AwsServerlessExpressStack",
    "functionName": "FirstNetHackathonAPI",
    "accountId": "851260606239"
  },
  "scripts": {
    "start": "node app.local.js",
    "start:dev": "./node_modules/nodemon/bin/nodemon.js --inspect=0.0.0.0:9229 app/app.js",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
  },
  "_moduleAliases": {
    "@db": "app/db",
    "@routes": "app/routes",
    "@server": "app/server/server",
    "@lib": "app/lib",
    "@conf": "app/conf",
    "@schema": "app/schema"
  },
  "license": "Apache-2.0",
  "dependencies": {
    "aws-serverless-express": "^3.0.0",
    "body-parser": "^1.18.2",
    "colors": "^1.2.1",
    "compression": "^1.6.2",
    "cors": "^2.8.3",
    "dotenv": "^5.0.1",
    "errorhandler": "^1.5.0",
    "express": "^4.16.3",
    "express-session": "^1.15.6",
    "fs": "0.0.1-security",
    "jasmine": "^3.1.0",
    "jest": "^22.4.3",
    "knex": "^0.14.4",
    "module-alias": "^2.0.6",
    "nock": "^9.2.3",
    "nodemon": "^1.17.2",
    "objection": "^1.0.1",
    "pug": "^2.0.0-rc.1",
    "request": "^2.85.0",
    "request-promise": "^4.2.2",
    "supertest": "^3.0.0"
  }
}
